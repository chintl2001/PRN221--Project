@page
@model BlogDetail
@using Final_Project.Models;
<section class="blog_area single-post-area section-padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 posts-list">
                <div class="single-post">
                    <div class="feature-img">
                        <img class="img-fluid" src="@Model.Blog.Image" style="width:80rem;" alt="">
                    </div>
                    <div class="blog_details">
                        <h2 style="color: #2d2d2d;">
                            @Model.Blog.Title
                        </h2>
                        <ul class="blog-info-link mt-3 mb-4">
                            <li><a href="#"><i class="fa fa-user"></i> @Model.Blog.Author</a></li>
                            <li><a href="#"><i class="fa fa-comments"></i> 03 Comments</a></li>
                        </ul>
                        <p class="excert">
                            @Model.Blog.Content
                        </p>
                    </div>
                </div>
                <div class="comments-area" id="commentsArea">
                    <h4>@Model.ApprovedComments.Count @((Model.ApprovedComments.Count == 1) ? "Comment" : "Comments")</h4>
                    @foreach (var comment in Model.ApprovedComments)
                    {
                        <div class="comment-list">
                            <div class="single-comment justify-content-between d-flex">
                                <div class="user justify-content-between d-flex">
                                    <div class="thumb">
                                        <img src="../adminassets/img/blog/comment_1.png" alt="">
                                    </div>
                                    <div class="desc">
                                        <p class="comment" style="color:chocolate">
                                            @comment.Comment1
                                        </p>
                                        <div class="d-flex justify-content-between">
                                            <div class="d-flex align-items-center">
                                                <h5>
                                                    Anonymous
                                                </h5>
                                                <p class="date">@comment.Date.Value.ToString("MMMM dd, yyyy 'at' h:mm tt")</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="comment-form">
                    <h4>Leave a Reply</h4>
                    <form class="form-contact comment_form" asp-page-handler="AddComment" asp-route-id="@Model.Blog.Id" method="post">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <textarea class="form-control w-100" name="commentContent" id="comment" cols="30" rows="9" placeholder="Write Comment"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="button button-contactForm btn_1 boxed-btn">Post Comment</button>
                        </div>
                    </form>
                </div>
                <div class="col-lg-4">
                    <div class="blog_right_sidebar">
                        <aside class="single_sidebar_widget search_widget">
                            <form asp-page="Blog" method="post">
                                <div class="form-group">
                                    <div class="input-group mb-3">
                                        <input type="text" name="title" value="@Model.Title" class="form-control" placeholder='Search Keyword' onfocus="this.placeholder = ''" onblur="this.placeholder = 'Search Keyword'">
                                        <div class="input-group-append">
                                            <button class="btns" type="button"><i class="ti-search"></i></button>
                                        </div>
                                    </div>
                                </div>
                                <button class="button rounded-0 primary-bg text-white w-100 btn_1 boxed-btn" type="submit">Search</button>
                            </form>
                        </aside>
                        <aside class="single_sidebar_widget popular_post_widget">
                            <h3 class="widget_title" style="color: #2d2d2d;">Recent Post</h3>
                            @foreach (var blog in Model.recentBlogs)
                            {
                                Blog blog1 = (Blog)blog;
                                <div class="media post_item">
                                    <img src="@blog1.Image" style="width:30%; height:30%;" alt="post">
                                    <div class="media-body">
                                        <a href="blog_details.html">
                                            <h3 style="color: #2d2d2d;">@blog1.Title</h3>
                                        </a>
                                        <p>@blog1.PublishDate.Value.Date.ToString("MM/dd/yyyy")</p>
                                    </div>
                                </div>
                            }

                        </aside>
                        <aside class="single_sidebar_widget newsletter_widget">
                            <h4 class="widget_title" style="color: #2d2d2d;">Newsletter</h4>
                            <form action="#">
                                <div class="form-group">
                                    <input type="email" class="form-control" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter email'" placeholder='Enter email' required>
                                </div>
                                <button class="button rounded-0 primary-bg text-white w-100 btn_1 boxed-btn" type="submit">Subscribe</button>
                            </form>
                        </aside>
                    </div>
                </div>
            </div>
        </div>
</section>

<!-- Nếu bạn chưa có thư viện jQuery, hãy thêm dòng sau để sử dụng jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Biến lưu trữ thông tin các bình luận
    var comments = [];

    // Xử lý sự kiện khi người dùng gửi bình luận
    document.getElementById('commentForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Ngăn chặn gửi form mặc định

        // Lấy nội dung bình luận từ textarea
        var commentContent = document.getElementById('comment').value;

        // Kiểm tra xem nội dung bình luận có trống hay không
        if (commentContent.trim() === '') {
            alert('Please enter your comment.'); // Hiển thị thông báo nếu nội dung bình luận trống
            return;
        }

        // Tạo một đối tượng bình luận mới
        var newComment = {
            Id: comments.length + 1, // Định danh cho bình luận
            UserName: 'Anonymous', // Bạn có thể thay đổi thành tên người dùng đã đăng nhập nếu có
            Content: commentContent,
            DateTime: new Date().toLocaleString(),
            Replies: [] // Danh sách câu trả lời cho bình luận này
        };

        // Hiển thị bình luận ngay lập tức trên giao diện
        var commentElement = '<div class="comment-list" id="comment_' + newComment.Id + '">' +
            '<div class="single-comment justify-content-between d-flex"><div class="user justify-content-between d-flex">' +
            '<div class="thumb"><img src="../adminassets/img/blog/comment_1.png" alt=""></div><div class="desc">' +
            '<p class="comment">' + newComment.Content + '</p><div class="d-flex justify-content-between">' +
            '<div class="d-flex align-items-center"><h5><a href="#">' + newComment.UserName + '</a></h5>' +
            '<p class="date">' + newComment.DateTime + '</p></div><div class="reply-btn">' +
            '<a href="#" class="btn-reply text-uppercase" onclick="showReplyForm(event, ' + newComment.Id + ')">reply</a></div></div>' +
            '<div class="reply-form" id="replyForm_' + newComment.Id + '"></div></div></div></div></div>';

        document.getElementById('commentsArea').innerHTML += commentElement;

        // Xóa nội dung bình luận từ textarea sau khi gửi thành công
        document.getElementById('comment').value = '';

        // Lưu trữ bình luận vào biến comments
        comments.push(newComment);
    });

    // Xử lý sự kiện khi người dùng nhấn vào nút "reply"
    function showReplyForm(event, commentId) {
        event.preventDefault(); // Ngăn chặn điều hướng đến đầu trang khi nhấn reply

        // Tạo form trả lời cho bình luận với id tương ứng
        var replyForm = '<form class="form-contact comment_form" onsubmit="submitReply(' + commentId + '); return false;">' +
            '<div class="row"><div class="col-12"><div class="form-group">' +
            '<textarea class="form-control w-100" id="reply_' + commentId + '" cols="30" rows="3" placeholder="Write Reply"></textarea>' +
            '</div></div></div><div class="form-group">' +
            '<button type="submit" class="button button-contactForm btn_1 boxed-btn">Post Reply</button></div></form>';

        // Hiển thị form trả lời lên giao diện
        document.getElementById('replyForm_' + commentId).innerHTML = replyForm;
    }

    // Xử lý sự kiện khi người dùng gửi câu trả lời
    function submitReply(commentId) {
        var replyContent = document.getElementById('reply_' + commentId).value;

        // Send an HTTP POST request to save the new comment
        fetch(`/BlogDetail?id=${commentId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                commentContent: replyContent
            })
        })
            .then(response => {
                if (response.ok) {
                    // Comment submitted successfully, reload the page to show the updated comments.
                    location.reload();
                } else {
                    // Handle errors if needed (e.g., show an error message).
                    console.error('Error submitting comment');
                }
            })
            .catch(error => {
                console.error('Error submitting comment:', error);
            });
    }
</script>